buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
		maven {
			name = "ossrh"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		maven {
			name = "nifty-maven-repo.sourceforge.net"
			url = "http://nifty-gui.sourceforge.net/nifty-maven-repo"
		}
        maven {
            url "https://plugins.gradle.org/m2/"
		}
    }
    dependencies {
		classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
			changing = true
		}
		classpath "de.undercouch:gradle-download-task:3.1.2"
    }
}

import de.undercouch.gradle.tasks.download.Download
apply plugin: 'forge'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}

configurations {
	shade
	compile.extendsFrom shade
}

/* eclipse.classpath.file.withXml {x ->
	def n = x.asNode()
	n.classpathentry.find {
		it.@kind == 'lib' && it.@path.contains('gregtech-5.09.33.31-dev')
	}.@sourcepath = 'libs/gregtech-5.09.33.31-src.zip'
} */

version = "0.0.3"
group = "com.bigbass.recex"
archivesBaseName = "RecipeExporter"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
	
	srgExtra "PK: com/google repack/recex/com/google"
	srgExtra "PK: javax/json repack/recex/javax/json"
	srgExtra "PK: org/glassfish repack/recex/org/glassfish"
	//srgExtra "PK: org/slf4j repack/recex/org/slf4j"
	//srgExtra "PK: org/apache repack/recex/org/apache"
	//srgExtra "PK: org/zeroturnaround repack/recex/org/zeroturnaround"
}

repositories {
	maven {
		name "Forge" // Applied Energistics
		url "https://maven.minecraftforge.net/"
	}
	maven { // GalacticGreg, YAMCore,..
		name 'UsrvDE'
		url "http://jenkins.usrv.de:8082/nexus/content/repositories/releases/"
	}
	maven { // Baubles
		name 'UsrvDE_3rdParty'
		url "http://jenkins.usrv.de:8082/nexus/content/repositories/thirdparty/"
	}
	maven {
		name = "chickenbones"
		url = "https://modmaven.dev/"
	}
	maven {
		name = "ic2, forestry"
		url = "http://maven.ic2.player.to/"
	}
	maven { // AppleCore
		url "http://www.ryanliptak.com/maven/"
	}
	maven {
		 name = "tterrag"
		 url = "http://maven.tterrag.com/"
	}
	maven { // WAILA
		name "Mobius Repo"
		url "http://mobiusstrip.eu/maven"
	}
	maven { // OpenComputers
		name "OpenComputers"
		url "http://maven.cil.li"
	}
}

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
	
	shade "com.google.code.gson:gson:2.7"
	
	shade "javax.json:javax.json-api:1.0"
	shade "org.glassfish:javax.json:1.0.4"
	
	shade "net.lingala.zip4j:zip4j:2.3.1"
	
	compile fileTree(dir: 'libs', include: '*.jar')
	compile fileTree(dir: 'libs', include: '*.zip')
}

task getGregTech(type: Download) {
    onlyIf {
        !file("libs/gregtech-5.09.43.165.jar").exists()
    }
    src "https://github.com/GTNewHorizons/GT5-Unofficial/releases/download/5.09.43.165/gregtech-5.09.43.165-dev.jar"
    dest file("libs/gregtech-5.09.43.165-dev.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

tasks.setupCIWorkspace.dependsOn getGregTech
tasks.setupDevWorkspace.dependsOn getGregTech
tasks.setupDecompWorkspace.dependsOn getGregTech
tasks.compileJava.dependsOn getGregTech

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
	
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
	
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
	configurations.shade.each { dep ->
		from(project.zipTree(dep)){
			exclude 'META-INF', 'META-INF/**'
		}
	}
}
